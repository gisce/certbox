services:
  certbox:
    build: .
    container_name: certbox
    ports:
      - "8068:8068"
    volumes:
      # Persist certificate data
      - certbox_ca:/app/ca
      - certbox_crts:/app/crts
      - certbox_private:/app/private
      - certbox_clients:/app/clients
      - certbox_requests:/app/requests
    restart: unless-stopped
    environment:
      - CERTBOX_HOST=0.0.0.0
      - CERTBOX_PORT=8068
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8068/', timeout=2)"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 10s
    networks:
      - certbox_network

  nginx:
    image: nginx:alpine
    container_name: certbox_nginx
    ports:
      - "1443:1443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx-init.sh:/nginx-init.sh:ro
      - nginx_ssl_certs:/etc/ssl/certs
      - nginx_ssl_private:/etc/ssl/private
    depends_on:
      - certbox
    restart: unless-stopped
    networks:
      - certbox_network
    command: sh /nginx-init.sh
    healthcheck:
      test: ["CMD", "wget", "--no-check-certificate", "-q", "--spider", "https://localhost:1443/nginx-health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 15s

networks:
  certbox_network:
    driver: bridge

volumes:
  certbox_ca:
    driver: local
  certbox_crts:
    driver: local
  certbox_private:
    driver: local
  certbox_clients:
    driver: local
  certbox_requests:
    driver: local
  nginx_ssl_certs:
    driver: local
  nginx_ssl_private:
    driver: local